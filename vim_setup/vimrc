" $PYTHONPATH='/home/bigbywolf/anaconda3/lib/python3.5/site-packages'

set nocompatible              " required
filetype off                  " required

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()

" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

" let Vundle manage Vundle, required
Plugin 'gmarik/Vundle.vim'

" Add all your plugins here (note older versions of Vundle used Bundle instead of Plugin)


" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required

" Enable folding
set foldmethod=indent
set foldlevel=99

" Enable folding with the spacebar
nnoremap <space> za

" paste into vim with ctrl-shift v
set paste

Plugin 'tmhedberg/SimpylFold'

" Install DoxygenToolkit from http://www.vim.org/scripts/script.php?script_id=987
let g:DoxygenToolkit_authorName="Arian Suarez"

" intelligent comments
set comments=sl:/*,mb:\ *,elx:\ */

"line for marking end recommended end
set colorcolumn=120
highlight ColorColumn ctermbg=darkgray

"Filetype detection
augroup project
	autocmd!
    autocmd BufRead,BufNewFile *.h,*.c set filetype=c.doxygen
augroup END

" Setting path variable
let &path.="src/include,/usr/include/AL,"
set includeexpr=substitute(v:fname,'\\.','/','g')

au BufNewFile,BufRead *.c
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=79
    \ set expandtab
    \ set autoindent
    \ set smartindent
    \ set fileformat=unix

au BufNewFile,BufRead *.py
    \ set tabstop=4
    \ set softtabstop=4
    \ set shiftwidth=4
    \ set textwidth=79
    \ set expandtab
    \ set autoindent
    \ set smartindent
    \ set fileformat=unix

au BufNewFile,BufRead *.js, *.html, *.css
    \ set tabstop=2
    \ set softtabstop=2
    \ set shiftwidth=2

Plugin 'vim-scripts/indentpython.vim'

au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/

set encoding=utf-8

Bundle 'Valloric/YouCompleteMe'

" doesn't seem to work
Plugin 'rdnetto/YCM-Generator'

let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>


" syntax corrections
Plugin 'scrooloose/syntastic'
" syntax checking
Plugin 'nvie/vim-flake8'

let python_highlight_all=1
syntax on

Plugin 'jnurmine/Zenburn'
Plugin 'altercation/vim-colors-solarized'

colorscheme badwolf
" colorscheme pychimp
" colorscheme Monokai-Refined
" colorscheme kalisi

Plugin 'scrooloose/nerdtree'
Plugin 'jistr/vim-nerdtree-tabs'
let NERDTreeIgnore=['\.pyc$', '\~$'] "ignore files in NERDTree
" start tree with <F2>
map <F2> :NERDTreeToggle<CR>

Plugin 'kien/ctrlp.vim'

set number

set showcmd
set cursorline
set showmatch
" search as characters are entered
"set incsearch
" highlight search
set hlsearch

Plugin 'Lokaltog/powerline', {'rtp': 'powerline/bindings/vim/'}
" need to make line appear on single windows
set laststatus=2

" git wrapper for vim
Plugin 'tpope/vim-fugitive'
" easier commiting of code
Plugin 'tpope/vim-commentary'

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" visualize your Vim undo tree
Plugin 'sjl/gundo.vim'
" toggle gundo
nnoremap <leader>u :GundoToggle<CR>

" save session
nnoremap <leader>s :mksession<CR>

"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" let g:ycm_global_ycm_extra_conf = '~/.ycm_extra_conf.py'

" python with virtualenv support
" py << EOF
" import os
" import sys
" if 'VIRTUAL_ENV' in os.environ:
"   project_base_dir = os.environ['VIRTUAL_ENV']
"   activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
"   execfile(activate_this, dict(__file__=activate_this))
" EOF
